#compdef _mvr mvr

autoload -U is-at-least

_mvr() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'--completions=[Generate completion scripts for your shell]: :(zsh bash fish powershell elvish)' \
'-v[Enable verbose output]' \
'--verbose[Enable verbose output]' \
'-d[Run as a dry run, without renaming any files]' \
'--dry[Run as a dry run, without renaming any files]' \
'-c[Copy files instead of renaming them]' \
'--copy[Copy files instead of renaming them]' \
'(-i --interactive -n --no-clobber)-f[Do not prompt before overwriting existing files]' \
'(-i --interactive -n --no-clobber)--force[Do not prompt before overwriting existing files]' \
'-i[Prompt before each file is renamed, the program will prompt regardless if a file would be overwritten]' \
'--interactive[Prompt before each file is renamed, the program will prompt regardless if a file would be overwritten]' \
'-n[Do not overwrite existing files]' \
'--no-clobber[Do not overwrite existing files]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
':expression -- File matching expression using regex:_files' \
':replacement -- Replacement string:_files' \
':file -- Files to rename:_files' \
&& ret=0
    
}

(( $+functions[_mvr_commands] )) ||
_mvr_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'mvr commands' commands "$@"
}

_mvr "$@"