#!/usr/bin/env zsh
# -*- mode: zsh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# vim: ft=zsh tw=120 sw=4 sts=4 et foldmarker=[[[,]]]

typeset -gA AsyncTasks

→async-task-callback() {
    local -i10 fd=$1
    local output callback="${AsyncTasks[$fd]}"

    # Remove entry from task map.
    builtin unset "AsyncTasks[$fd]"

    # Remove the handler.
    builtin zle -F $fd
    # Read from the file descriptor.
    output="$(<&$fd)"
    # Close the file descriptor.
    builtin exec {fd}<&-

    # Call the user callback with the task output.
    "$callback" "$output"
}

@async-task() {
    builtin emulate -LR zsh ${=${options[xtrace]:#off}:+-o xtrace}
    builtin setopt extended_glob warn_create_global typeset_silent no_short_loops rc_quotes no_auto_pushd

    local callback=$1 task=$2
    local -i10 fd

    # Open a pipe to read from the task.
    builtin exec {fd}<"$task"
    # Associate the task callback with the file descriptor.
    AsyncTasks[$fd]="$callback"
    # When the file descriptor is readable, run the callback handler.
    builtin zle -F "$fd" →async-task-callback
}

@async-task "$@"